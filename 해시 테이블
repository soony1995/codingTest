해시 테이블 (Hash Table) 이란?
해시 테이블은 (Key, Value) 로 데이터를 저장하는 자료구조 중 하나로 빠르게 데이터를 검색할 수 있는 자료구조이다. 
해시 테이블이 빠른 검색속도를 제공하는 이유는, 내부적으로 배열(버킷)을 사용하여 데이터를 저장하기 때문이다. 
해시 테이블은 각각의 key 값에 해시 함수를 적용하여 배열의 고유한 index 를 생성하고, 
이 index 를 활용해 값을 저장하거나 검색하게 된다. 실제 값이 저장되는 장소를 버킷 (또는 슬롯) 이라고 한다.

장점
key-value 가 1:1 로 매핑되어 있기 때문에 삽입, 삭제, 검색의 과정이 모두 평균적으로 O(1)의 시간복잡도를 가지고 있다.

단점
해시 충돌이 발생한다. 
순서/관계가 있는 배열에는 어울리지 않는다.
공간 효율성이 떨어진다. -> 데이터가 저장되기 전에 미리 저장공간을 확보해야 하기 때문이다.
hash function의 의존도가 높다 => 해시함수가 복잡한 경우 연산속도 증가
 

hashDict = {} 

값 할당, 가져오기
for part in hashDict :
  값을 할당해준다.

키값을 해싱해서 넣어주기도 한다.(hash() 함수 이용)
 hashDict[hash(part)] = part
 
고유한 키값이므로 +-을 이용해 특정 키-값을 유추해 낼 수 있다. 



 https://baeharam.netlify.app/posts/data%20structure/hash-table
